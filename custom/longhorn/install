#!/bin/bash
# Be sure to have all nodes prepared with ./prepare
LONGHORN_USER=${LONGHORN_USER:admin}
LONGHORN_PASSWORD=${LONGHORN_PASSWORD?}
LONGHORN_HOST=longhorn.homelab.choam.de

helm repo add longhorn https://charts.longhorn.io
helm repo update
# curl -LfsS https://api.github.com/repos/longhorn/longhorn/releases/latest | jq -r .tag_name
helm upgrade \
  --install longhorn longhorn/longhorn \
  --version 1.4.2 \
  --namespace longhorn-system \
  --create-namespace \
  --set persistence.defaultClass=false \
  --set persistence.defaultClassReplicaCount=2 \
  --set defaultSettings.defaultClassReplicaCount=2

echo "Setting up Longhorn user $LONGHORN_USER"
if kubectl -n longhorn-system get secret basic-auth -o yaml &>/dev/null; then
  echo "Longhorn user already exists"
else
  echo "${LONGHORN_USER}:$(openssl passwd -stdin -apr1 <<<"${LONGHORN_PASSWORD}")" >>auth
  kubectl -n longhorn-system create secret generic basic-auth --from-file=auth
  rm auth
fi

echo "Setting up Longhorn ingress $LONGHORN_HOST"
kubectl -n longhorn-system apply -f - <<EOF
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn-ingress
  namespace: longhorn-system
  annotations:
    # type of authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    # prevent the controller from redirecting (308) to HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
    # custom max body size for file uploading like backing image uploading
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
spec:
  rules:
  - host: '$LONGHORN_HOST'
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: longhorn-frontend
            port:
              number: 80
EOF
